#lang racket

(require srfi/1)
(require 2htdp/universe 2htdp/image lang/posn)


(define *map-zero* '(
                     (0 1 2 3 4)
                     (1 2 3 4 0)
                     (2 3 4 0 1)
                     (3 4 0 1 2)
                     (4 0 1 2 3)))

 (map (lambda (x) (squre 64 "solid"
                         (case x
                           ((0) "red")
                           ((!) "white")
                           ((2) "green")
                           ((3) "yellow")
                           (else "blue"))) (flatten *map-zero*)))


               (square 64 "solid" "red") 
               (square 64 "solid" "white")
               (square 64 "solid" "green")
               (square 64 "solid" "yellow"))